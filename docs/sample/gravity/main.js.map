{"version":3,"file":"main.js","sourceRoot":"","sources":["../../src/drawimage.ts","../../src/mathutil.ts","../../src/collisiontester.ts","../common.ts","main.ts"],"names":[],"mappings":"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","sourcesContent":["interface RenderObject {\r\n    color :string;\r\n    render(canvas:Canvas2D);\r\n}\r\n\r\ninterface Shape {\r\n\r\n}\r\n\r\ninterface Animate {\r\n    timer : number;\r\n    callback : Function;\r\n    data : any;\r\n    start();\r\n    stop();\r\n}\r\n\r\nclass Canvas2D extends CanvasRenderingContext2D{\r\n    width : number = 1;\r\n    height : number = 1;\r\n}\r\n\r\nclass Action implements Animate{\r\n    timer : number;\r\n    callback : Function;\r\n    data : any;\r\n    duration : number = 500;\r\n    repeat : boolean = true;    \r\n    count : number = 0;\r\n    frame : number = -1;\r\n    constructor(data: any,dur:number, repeat = true){\r\n        this.data = data;\r\n        this.duration = dur;\r\n        this.repeat = repeat;        \r\n    }\r\n    \r\n    start(){\r\n        var _this = this; \r\n        var count = 0;\r\n\r\n        var framerate = this.duration/this.frame;\r\n        if (this.duration == -1)\r\n            framerate = 1000/60;\r\n\r\n        this.timer = setInterval(function(){\r\n            if (!_this.callback)\r\n                return;\r\n\r\n            var isStop = _this.callback(_this,_this.data,count)\r\n            if (isStop)\r\n                _this.stop();\r\n            count++;\r\n            if (!_this.repeat && count == _this.frame){\r\n                _this.stop();\r\n            }\r\n        },framerate);\r\n    }\r\n    stop (){\r\n        clearInterval(this.timer);\r\n    }\r\n}\r\n\r\nclass MoveAnimate implements Animate {\r\n    timer =0;\r\n    private duration : number = 0;\r\n    public callback ;\r\n    data : any;\r\n    start(){\r\n        var _this = this; \r\n        this.timer = setInterval(function(){\r\n            _this.callback(_this.data);\r\n        },1000/60);\r\n    }\r\n    stop (){\r\n        clearInterval(this.timer);\r\n    }\r\n}\r\n\r\nclass Point {\r\n    public x : number = 0;\r\n    public y : number = 0;\r\n    constructor(x=0, y=0){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Rect extends Point{\r\n    public width : number = 0;\r\n    public height : number = 0;\r\n    constructor(x :number = 0, y : number = 0, width : number = 0 , height : number=0){\r\n        super(x,y);\r\n        this.width= width;\r\n        this.height= height;\r\n    }\r\n    containPoint(x:number, y:number):boolean{\r\n        if (this.x > x )\r\n            return false;\r\n        if (this.y > y)\r\n            return false;\r\n        if (this.x+this.width < x)\r\n            return false;\r\n        if (this.y+this.height < y)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    containRect(rect:Rect) : boolean{\r\n        if (!this.containPoint(rect.x,rect.y))\r\n            return false;\r\n        if (!this.containPoint(rect.x+rect.width,rect.y+rect.height))\r\n            return false;            \r\n        return true;\r\n    }\r\n\r\n    collisionTest(rect:Rect,callback:Function){\r\n        if (this.x > rect.x )\r\n            callback(\"left\");\r\n        if (this.y > rect.y)\r\n            callback(\"top\");\r\n        if (this.x+this.width < rect.x + rect.width)\r\n            callback(\"right\");\r\n        if (this.y+this.height < rect.y + rect.height)\r\n            callback(\"bottom\");\r\n    }\r\n    \r\n}\r\n\r\nclass Bitmap extends Rect {    \r\n    source : HTMLImageElement = null;\r\n    constructor(image:HTMLImageElement,width = image.width, height = image.height){\r\n        super(0,0,width,height);\r\n        this.source = image;\r\n    }\r\n}\r\n\r\nclass SpriteAction extends Action{\r\n    constructor(data:SpriteBitmap,dur:number,repeat = true){        \r\n        super(data,dur,repeat)\r\n        this.frame =  data.rects.length;\r\n        this.callback = this.step;\r\n    }\r\n    public step(obj:Action, dst:SpriteBitmap ,count:number){\r\n        dst.nextStep();\r\n    }\r\n}\r\n\r\nclass SpriteBitmap  {\r\n    source : HTMLImageElement = null;\r\n    rects : Rect []\r\n    public currentIndex :number =0;\r\n    constructor(image:HTMLImageElement,rects:Rect[]){\r\n        this.source = image;\r\n        this.rects = rects;\r\n    }\r\n\r\n    public getImageShift() : Rect{\r\n        var rect = this.getImageRect(this.currentIndex++);\r\n        this.nextStep();\r\n        return rect;\r\n    }\r\n\r\n    public nextStep(){\r\n        this.currentIndex++;\r\n        this.currentIndex = this.currentIndex % this.rects.length;\r\n    }\r\n    \r\n    public currentImage(): Rect{\r\n        return this.getImageRect(this.currentIndex);\r\n    }\r\n\r\n    public getImageRect(index:number) : Rect{\r\n        return this.rects[index];\r\n    }\r\n}\r\n\r\nclass PolygonBody implements RenderObject, RBody{\r\n    color : string = \"#FFF\";\r\n    points : Point[] = [];\r\n    shape : Rect = null;\r\n    angle : number = 0;\r\n    closedPath : boolean = true;\r\n    setPoints(point : number[]){\r\n        this.points = [];\r\n        while(point.length){\r\n            this.points.push(new Point(point.shift(),point.shift()));\r\n        }\r\n    }\r\n    render(canvas:Canvas2D){\r\n        canvas.beginPath();\r\n        canvas.strokeStyle = this.color;\r\n        this.points.forEach( (pt,index) => {\r\n            if (index == 0)\r\n                canvas.moveTo(pt.x,pt.y);\r\n            canvas.lineTo(pt.x,pt.y);            \r\n        });\r\n\r\n        if (this.closedPath)\r\n            canvas.closePath();\r\n        \r\n        canvas.stroke();        \r\n    }\r\n}\r\n\r\nfunction getLineBody(body:RBody, lines : Line[]) : Line[]{\r\n    if (body instanceof PolygonBody){\r\n        var pbody = <PolygonBody> body;\r\n        var pos : Point[] = pbody.points;\r\n                                \r\n        for(var i = 0 ; i<pos.length-1 ; i++){\r\n            lines.push(new Line(pos[i], pos[i+1]));\r\n        }\r\n        return lines;\r\n    }\r\n    if (body instanceof RectBody){\r\n        var pos : Point[] = [];\r\n        pos.push(new Point(body.shape.x, body.shape.y));\r\n        pos.push(new Point(body.shape.x + body.shape.width, body.shape.y));\r\n        pos.push(new Point(body.shape.x + body.shape.width, body.shape.y + body.shape.height));\r\n        pos.push(new Point(body.shape.x, body.shape.y+ body.shape.height));\r\n        \r\n        for(var i = 0 ; i<pos.length-1 ; i++){\r\n            lines.push(new Line(pos[i], pos[i+1]));\r\n        }\r\n\r\n        lines.push(new Line(pos[pos.length -1 ],pos[0]));\r\n    }\r\n\r\n    return lines;\r\n}\r\n\r\nclass ScrollSprite implements RenderObject {\r\n    color : string = \"black\";\r\n    view : Rect = new Rect();\r\n    region : Rect = new Rect();\r\n    image : Bitmap;\r\n    public render(canvas:Canvas2D){\r\n        canvas.save();\r\n        canvas.drawImage(this.image.source,this.view.x, this.view.y, this.view.width, this.view.height, this.region.x, this.region.y, this.region.width, this.region.height )\r\n        canvas.restore();\r\n    }\r\n}\r\n        \r\nclass RayCastVectorBody extends PolygonBody{\r\n    vector : Vector\r\n    relationBody :RBody[];\r\n    vertexes : CircleBody[] = [];\r\n    guideLine : LineBody[] =[]\r\n    render(canvas:Canvas2D){\r\n        this.vertexes=[];\r\n        this.guideLine = [];\r\n        this.closedPath = false;\r\n        this.updateVector();\r\n        super.render(canvas);\r\n        for( var i = 0 ; i< this.vertexes.length; i++){\r\n            this.vertexes[i].render(canvas);\r\n        }\r\n        canvas.setLineDash([5, 15]);\r\n        for( var i = 0 ; i< this.guideLine.length; i++){\r\n            this.guideLine[i].render(canvas);\r\n        }\r\n        canvas.setLineDash([]);\r\n        \r\n    }\r\n\r\n    converttonumarray(point:Point[]):number[]{\r\n        var array : number[] =[];\r\n        point.forEach(el=>{\r\n            array.push(el.x,el.y);\r\n        }) \r\n        return array;\r\n    }\r\n\r\n    updateVector(){\r\n        var points:Point[] = [this.vector.position];\r\n        var lines : Line[] =[];\r\n\r\n        for (var i = 0 ; i < this.relationBody.length ; i++)\r\n            getLineBody(this.relationBody[i],lines);\r\n\r\n        var circlebodies : CircleBody[] = [];\r\n        for (var i = 0 ; i < this.relationBody.length ; i++){\r\n            if (this.relationBody[i] instanceof CircleBody)\r\n            circlebodies.push(this.relationBody[i]);\r\n        }\r\n        \r\n        var startPoint = this.vector.position;\r\n        var angle = this.vector.angle;\r\n        var distance = this.vector.distance;\r\n        var lastLine = null;\r\n\r\n        while(true)\r\n        {\r\n            var newangle = 0;\r\n            var endPoint = MathUtil.getEndPoint(startPoint,angle,distance)\r\n            var midlePoint = CollisionTester.checkintersection(lines, startPoint,endPoint, lastLine,function(point:Point, line:Line){\r\n                var p = MathUtil.subjectPoint(line.startPos,line.endPos);\r\n                var lineangle = Math.abs(MathUtil.toDegrees(Math.atan2(p.y,p.x)));\r\n                lastLine = line;\r\n                newangle = angle + (lineangle - angle)*2\r\n            });\r\n\r\n            if (midlePoint)\r\n            {\r\n                points.push(midlePoint);\r\n                var dist =  MathUtil.getDistance(startPoint,midlePoint)\r\n                startPoint = midlePoint;\r\n                angle = newangle;\r\n                distance -= dist;\r\n            }\r\n            else{\r\n                \r\n                break;\r\n            }\r\n        }\r\n        \r\n        CollisionTester.validCircleToLine(circlebodies,startPoint,endPoint,function(newpoint,angle,subdistance){\r\n            distance -= subdistance;                \r\n            endPoint =  MathUtil.getEndPoint(newpoint,angle,distance);\r\n            points.push(newpoint);\r\n        })\r\n        points.push(endPoint);\r\n        var vbuffer = this.converttonumarray(points);\r\n        this.setPoints(vbuffer);\r\n    }\r\n\r\n    \r\n}\r\n\r\nclass Vector {\r\n    position : Point = new Point();\r\n    angle : number=  0;\r\n    distance : number =1;\r\n    constructor(point:Point, angle:number = 0, distance:number = 1){\r\n        this.position = point;\r\n        this.angle = angle;\r\n        this.distance = distance;\r\n    }\r\n}\r\n\r\nclass VectorBody extends Vector implements RenderObject, Shape{\r\n    color : string = \"#FFF\";\r\n    constructor(point:Point, angle:number = 0, distance:number = 1){\r\n        super(point,angle,distance);\r\n    }\r\n    startRotate(){\r\n        var animate = new MoveAnimate();\r\n        animate.data = this;\r\n        var roff = Math.random()/2-0.5/2;\r\n        animate.callback = function(data:VectorBody){\r\n            data.angle +=roff;            \r\n        };\r\n        animate.start();\r\n    }\r\n    render(canvas:Canvas2D){\r\n        canvas.save();\r\n        canvas.strokeStyle = this.color;\r\n        canvas.beginPath();\r\n        canvas.moveTo(this.position.x, this.position.y);\r\n        var x = Math.cos(MathUtil.toRadians(this.angle)) * this.distance;\r\n        var y = -Math.sin(MathUtil.toRadians(this.angle)) * this.distance;\r\n        canvas.lineTo(this.position.x+x,this.position.y+y);        \r\n        canvas.stroke();        \r\n        canvas.restore();\r\n    }\r\n}\r\n\r\nclass Line implements Shape{\r\n    public startPos : Point;\r\n    public endPos : Point;\r\n    constructor ( sp : Point, ep:Point){\r\n        this.startPos = sp;\r\n        this.endPos = ep;\r\n    }\r\n}\r\n\r\nclass LineBody extends PolygonBody{\r\n    public startPos : Point;\r\n    public endPos : Point;\r\n    constructor(start:Point,end:Point){\r\n        super()\r\n        this.startPos = start;\r\n        this.endPos = end;\r\n        this.updatePoint();\r\n    }\r\n\r\n    updatePoint(){\r\n        this.setPoints([this.startPos.x,this.startPos.y,this.endPos.x,this.endPos.y]);\r\n    }\r\n}\r\n\r\nclass Renderer {\r\n    backgroundColor : string = \"#000\";\r\n    objects : RenderObject[] = [];\r\n    timer : number = 0;\r\n    canvas : Canvas2D = undefined;\r\n    frameRate : number =60;\r\n    offset : Point = new Point();\r\n    public addObject(object:RenderObject){\r\n        this.objects.push(object);\r\n    } \r\n    public removeObject(object:RenderObject){\r\n        var index= this.objects.indexOf(object);\r\n        if (index > -1)\r\n            this.objects.splice(index,1);\r\n    }\r\n\r\n    public render(canvas : Canvas2D){\r\n        canvas.lineWidth = 1;\r\n        var oldfillStyle = canvas.fillStyle;\r\n        canvas.fillStyle = this.backgroundColor;   \r\n        canvas.fillRect(0,0,Resource.width,Resource.height);\r\n        canvas.fillStyle = oldfillStyle;\r\n\r\n        this.objects.forEach(element => {\r\n            element.render(canvas);\r\n        });\r\n    }\r\n\r\n    public start(){\r\n        var _this = this;\r\n        this.timer = setInterval(function(){\r\n            _this.render(_this.canvas);\r\n        },1000/this.frameRate);\r\n    }\r\n\r\n    public stop(){\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    public refresh(){\r\n        this.render(this.canvas);\r\n    }\r\n}\r\n\r\nclass RBody implements RenderObject,Shape{    \r\n    color : string = \"#000\";\r\n    shape : Rect  = new Rect();\r\n    angle : number = 0;\r\n    public render(canvas : Canvas2D){\r\n    } \r\n}\r\n\r\nclass Circle implements Shape{\r\n    point : Point \r\n    radius : number = 0;\r\n}\r\n\r\nclass CircleBody extends RBody implements RenderObject{\r\n    render(canvas:Canvas2D){\r\n        canvas.save();\r\n        canvas.translate(this.shape.x,this.shape.y);\r\n        canvas.beginPath();\r\n        canvas.strokeStyle = this.color;\r\n        canvas.arc(0,0,this.shape.width,0,2*Math.PI, false);\r\n        canvas.stroke();\r\n        canvas.fillStyle = this.color;\r\n        canvas.fill();\r\n        //canvas.strokeRect(this.shape.x,this.shape.y,3,3)\r\n        canvas.restore();\r\n    }\r\n}\r\n\r\nclass SpriteBody extends RBody{\r\n    image : SpriteBitmap = null;\r\n    angle : number;\r\n    currentAnimation : Animate;  \r\n\r\n    public render(canvas : Canvas2D){\r\n        canvas.save();\r\n        canvas.translate(this.shape.x + this.shape.width / 2 ,this.shape.y + this.shape.height/2)\r\n        canvas.rotate(this.angle);\r\n        canvas.translate( -this.shape.width / 2 ,-this.shape.height/2)\r\n        \r\n        if (this.image)\r\n        {\r\n            var imageRegion = this.image.currentImage();\r\n            canvas.drawImage(this.image.source,imageRegion.x,imageRegion.y,imageRegion.width,imageRegion.height,0,0,this.shape.width,this.shape.height);\r\n        }\r\n        else\r\n        {\r\n            canvas.strokeStyle = this.color;\r\n            canvas.strokeRect(0,0,this.shape.width,this.shape.height);\r\n        }\r\n        canvas.restore();\r\n    } \r\n}\r\n\r\nclass RectBody extends RBody{\r\n    public render(canvas : Canvas2D){\r\n        canvas.strokeStyle = this.color;\r\n        canvas.beginPath();\r\n        canvas.strokeRect(this.shape.x,this.shape.y,this.shape.width,this.shape.height);\r\n        canvas.stroke();\r\n    }\r\n}\r\n\r\n\r\nclass TextBody extends RectBody{\r\n    public text : string;\r\n    public render(canvas : Canvas2D){\r\n        canvas.fillStyle = this.color;\r\n        if (this.text)\r\n        {\r\n            canvas.fillText(this.text,this.shape.x,this.shape.y,100);            \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nclass ResourceManager {\r\n    public width : number= 1;\r\n    public height : number =1;\r\n    public worldRect : Rect ;\r\n    public OnFinishedLoad : Function;\r\n    public Images :string[] = [];\r\n    private count : number = 0;\r\n    private loadedCount : number = 0;\r\n    public load(){\r\n        this.count = this.Images.length;\r\n        this.Images.forEach( el=>{\r\n            this.imageLoad(el);\r\n\r\n        });\r\n    }\r\n\r\n    private checkFinished(){\r\n        if (this.count == this.loadedCount){\r\n            if (this.OnFinishedLoad){\r\n                this.OnFinishedLoad();\r\n            }\r\n        }\r\n    }\r\n\r\n    private imageLoad( url:string) {\t\r\n        var _this = this;\r\n        var img = new Image();\r\n        img.src = url;\r\n        img.onload = function() {        \r\n            Resource[url] = img;\r\n            _this.loadedCount++;\r\n            _this.checkFinished();\r\n        };\r\n    }\r\n}\r\n\r\n\r\nvar Resource = new ResourceManager();","\r\nclass MathUtil {\r\n    public static randomInt =  function(max:number) : number{\r\n        return (Math.random() * max )| 0;\r\n    }\r\n\r\n    public static toRadians = function(degrees) {\r\n        return degrees * Math.PI / 180;\r\n    };\r\n \r\n    // Converts from radians to degrees.\r\n    public static toDegrees = function(radians) {\r\n        return radians * 180 / Math.PI;\r\n    };\r\n\r\n    public static lineIntersection(srt1:Point, end1:Point,srt2:Point,end2:Point, callback:Function){\r\n\r\n        var dx_ba = end1.x - srt1.x;\r\n        var dx_dc = end2.x - srt2.x;\r\n        var dy_ba = end1.y - srt1.y;\r\n        var dy_dc = end2.y - srt2.y;\r\n        var den = dy_dc * dx_ba - dx_dc * dy_ba;\r\n\r\n        if (den == 0)\r\n            callback(false);\r\n\r\n        var dy_ac = srt1.y-srt2.y;\r\n        var dx_ac = srt1.x-srt2.x\r\n        var ua = (dx_dc * dy_ac-dy_dc * dx_ac) / den;\r\n        var ub = (dx_ba * dy_ac-dy_ba * dx_ac) / den;\r\n\r\n        if ( 0 < ua && ua <1 && 0 < ub && ub <1 )\r\n        {   \r\n            var nx = srt1.x + dx_ba * ua;\r\n            var ny = srt1.y + dy_ba * ua;\r\n            callback(true,{x:nx,y:ny});\r\n        }else{\r\n            callback(false)\r\n        }\r\n    }\r\n\r\n    public static subjectPoint(sp:Point, ep:Point) : Point{\r\n        return {\r\n            x:sp.x - ep.x,\r\n            y:sp.y - ep.y\r\n        }\r\n    }\r\n    \r\n    public static getEndPoint(point:Point,angle:number,distance:number) : Point{\r\n        var x = Math.cos(MathUtil.toRadians(angle)) * distance;\r\n        var y = -Math.sin(MathUtil.toRadians(angle)) * distance;                           \r\n        return { x: point.x + x, y:point.y+y};\r\n    }\r\n\r\n    public static getDistance(sp:Point,ep:Point) : number{            \r\n        return Math.sqrt(Math.pow(sp.x - ep.x,2) + Math.pow(sp.y - ep.y,2));\r\n    }\r\n\r\n    public static get3PointDegree(x1 : number, y1: number, x2: number,y2: number){\r\n        return MathUtil.toDegrees(Math.atan2(y1*x2-x1*y2, x1*x2+y1*y2));\r\n    }\r\n\r\n    \r\n    public static circlelineintersection(p1:Point,r:number,p2:Point,p3:Point) : Array<Point> {\r\n\r\n        var x = p1.x;\r\n        var y = p1.y;\r\n\r\n        var a = p2.x;\r\n        var b = p2.y;\r\n        var c = p3.x;\r\n        var d = p3.y;\r\n\r\n        if (c != a){\r\n            var m = (d-b)/(c-a);;\r\n            var n = (b*c-a*d)/(c-a);\r\n\r\n            var A = m*m+1;\r\n            var B1 = (m*n-m*y-x);\r\n            var C = (x*x+y*y-r*r + n*n - 2 * n * y);\r\n            var D = B1 * B1 - A*C;\r\n\r\n            if (D<0){\r\n                return []\r\n            }\r\n            else if (D==0){\r\n                var X = -B1/A\r\n                var Y = m*X+n\r\n                return [new Point(X,Y)]\r\n            }\r\n            else {\r\n                var X = -(B1 + Math.sqrt(D))/A\r\n                var Y = m*X + n\r\n\r\n                var X2 = -(B1 - Math.sqrt(D))/A\r\n                var Y2 = m*X2+n\r\n                return [ new Point(X,Y), new Point(X2,Y2)]\r\n            }\r\n        }\r\n        else {\r\n            if (a < (x - r) || a > (x + r) ) {\r\n                return []\r\n            }\r\n            else if (a == (x-r) || a ==(x+r)){\r\n                var X=a;\r\n                var Y=y;\r\n                return [new Point(X,Y)]\r\n            }\r\n            else {\r\n                var X = a\r\n                var Y = y + Math.sqrt( r * r - (a-x)*(a-x))\r\n                \r\n                var Y1 = y - Math.sqrt( r * r - (a-x)*(a-x))\r\n\r\n                return [new Point(X,Y), new Point(X,Y1)]\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nclass CollisionTester{\r\n    static CollisionCircle(st : CircleBody, dt:CircleBody)\r\n    {\r\n        return MathUtil.getDistance(new Point(st.shape.x, st.shape.y), new Point(dt.shape.x, dt.shape.y)) < (st.shape.width + dt.shape.width)\r\n    }\r\n\r\n    static getMinDistancePoint(dp : Point, arryPoint : Point[]){\r\n        var dists : number[] = [];\r\n        for(var i = 0 ; i<arryPoint.length ; i++){\r\n            dists.push(MathUtil.getDistance(dp,arryPoint[i]));\r\n        }\r\n        \r\n        var min:number = Number.MAX_VALUE;\r\n        var minindex = 0;\r\n        for(var i = 0 ; i < dists.length; i++){\r\n\r\n            if (min > dists[i]){\r\n                min = dists[i];\r\n                minindex =i;\r\n            }\r\n        }\r\n\r\n        return minindex;\r\n    }\r\n\r\n    static checkintersection(lines:Line[], spoint:Point,epoint:Point,ignore:Line, resultF : Function): Point{\r\n        var resultPoint : Point;\r\n        var interPoints : Point[] = [];\r\n        var interLines : Line[] = []\r\n        for( var i = 0 ; i < lines.length; i++){\r\n            \r\n            var element = lines[i];\r\n            if (element == ignore)\r\n                continue;\r\n            MathUtil.lineIntersection(spoint,epoint, element.startPos,element.endPos, function(result,point:Point){\r\n                if (result){\r\n                    interPoints.push(point);\r\n                    interLines.push(element);\r\n                }\r\n            })\r\n        }\r\n\r\n        if (interPoints.length >0)\r\n        {\r\n            var minIndex =  CollisionTester.getMinDistancePoint(spoint,interPoints);\r\n            resultPoint = interPoints[minIndex];\r\n            resultF(resultPoint,interLines[minIndex]);\r\n        }\r\n\r\n        return resultPoint;\r\n    } \r\n    \r\n    static validCircleToLine(circlebodies : CircleBody[], startPoint : Point, endPoint: Point, callback : Function){\r\n        \r\n        for (var i = 0 ; i <  circlebodies.length;i++){\r\n            //\r\n            var circle = circlebodies[i];\r\n            \r\n            var circlepoints = MathUtil.circlelineintersection(new Point(circle.shape.x,circle.shape.y), circle.shape.width,startPoint,endPoint);\r\n            \r\n            var centerpos = new Point(circle.shape.x,circle.shape.y);\r\n            var minx = startPoint.x < endPoint.x ? startPoint.x : endPoint.x;\r\n            var maxx = startPoint.x > endPoint.x ? startPoint.x : endPoint.x;\r\n            var miny = startPoint.y < endPoint.y ? startPoint.y : endPoint.y;\r\n            var maxy = startPoint.y > endPoint.y ? startPoint.y : endPoint.y;\r\n            \r\n            var interpoints : Point[] = [];\r\n            var distances : number [] = [];\r\n            for( var j = 0 ; j < circlepoints.length; j++){\r\n                var ppoint = circlepoints[j];\r\n                if (ppoint.x > minx && ppoint.x < maxx && ppoint.y > miny && ppoint.y < maxy){\r\n\r\n                    interpoints.push(circlepoints[j]);\r\n\r\n                    var dist = MathUtil.getDistance(startPoint,ppoint);                \r\n                    distances.push(dist);\r\n                }\r\n            }\r\n\r\n            var min = Number.MIN_VALUE;\r\n            var minIndex = 0;\r\n            distances.forEach( (element,index) => {\r\n                if (min > element){\r\n                    minIndex = index;\r\n                }\r\n            });\r\n\r\n            if (interpoints.length > 0){\r\n                // console.log(\"interpoints : \" )\r\n                // console.log(\"circlebodies : \", circlebodies.length)\r\n                var newpoint :Point= interpoints[minIndex];\r\n                var linevect =  MathUtil.subjectPoint(startPoint,endPoint);                \r\n                \r\n                var linedgree =  MathUtil.toDegrees(Math.atan2(-linevect.y,linevect.x));\r\n\r\n                var subp1 = MathUtil.subjectPoint(centerpos,newpoint);\r\n                var guideStart = new Point(startPoint.x + subp1.x , startPoint.y + subp1.y);\r\n                var subp2 = MathUtil.subjectPoint(centerpos,guideStart)\r\n                var d3angle =linedgree-MathUtil.get3PointDegree(subp1.x,subp1.y,subp2.x,subp2.y)*2;\r\n\r\n                var subdistanc = MathUtil.getDistance(newpoint,startPoint);\r\n                callback(newpoint,d3angle,subdistanc);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../src/dependency.d.ts\" />\r\nclass TestBody  extends RectBody{    \r\n    image : Bitmap = null;\r\n    debugging : Boolean = false;\r\n    angle : number = 0;\r\n    collision : CollisionTester;\r\n    selected : boolean = false;\r\n    move (x:number,y:number){\r\n        var vector = new Vector(this.shape,this.shape.y);\r\n        vector.angle = MathUtil.toDegrees(Math.atan2(y,x));\r\n        vector.distance =  MathUtil.getDistance(new Point(),new Point(x,y));\r\n        var animate = new MoveAnimate();\r\n        animate.data = this;\r\n        var roff = Math.random()/2-0.5/2;\r\n        animate.callback = function(data:RBody){\r\n            Resource.worldRect.collisionTest(data.shape,function(direction){\r\n                switch(direction){\r\n                    case \"left\":\r\n                        x = -x;\r\n                        break;\r\n                    case \"right\":\r\n                        x = -x;\r\n                        break;\r\n                    case \"top\":\r\n                        y = -y;\r\n                        break;\r\n                    case \"bottom\":\r\n                        y = -y;\r\n                        break;\r\n                }\r\n            });\r\n            \r\n            data.shape.x += x;\r\n            data.shape.y += y;\r\n            data.angle +=roff;\r\n\r\n        };\r\n        animate.start();\r\n    }\r\n\r\n    public render(canvas : Canvas2D){\r\n        canvas.save();\r\n        canvas.translate(this.shape.x + this.shape.width / 2 ,this.shape.y + this.shape.height/2)\r\n        canvas.rotate(this.angle);\r\n        canvas.translate( -this.shape.width / 2 ,-this.shape.height/2)\r\n        \r\n        if (this.image)\r\n        {\r\n            canvas.drawImage(this.image.source,this.image.x, this.image.y,this.image.width,this.image.height,0,0,this.shape.width,this.shape.height);\r\n        }\r\n        else\r\n        {\r\n            canvas.strokeStyle = this.color;\r\n            canvas.strokeRect(0,0,this.shape.width,this.shape.height);\r\n        }\r\n        if (this.selected){\r\n            canvas.strokeStyle = \"#FFF\"\r\n            canvas.strokeRect(0,0,this.shape.width,this.shape.height);\r\n        }\r\n        canvas.restore();\r\n    } \r\n}\r\n\r\nclass SampleRenderer extends Renderer {\r\n    selectedBody : TestBody ; \r\n    public addMouseEvent(element:HTMLElement){\r\n        element.addEventListener(\"mousedown\",this.onmousedown.bind(this));\r\n        element.addEventListener(\"mousemove\",this.onmousemove.bind(this));\r\n        element.addEventListener(\"mouseup\",this.onmouseup.bind(this));\r\n    }\r\n\r\n    onmousedown(event:MouseEvent){\r\n        var _sbody =  this.selectedBody;\r\n        this.objects.forEach(el => {\r\n            \r\n            if (el instanceof TestBody)\r\n            {\r\n                if (el.shape.containPoint(event.x,event.y)){\r\n                    el.selected = true;\r\n                    _sbody = el;\r\n                    return;\r\n                }   \r\n            }   \r\n        });\r\n        if (_sbody)\r\n        {\r\n            if (this.selectedBody)\r\n                this.selectedBody.selected =false;\r\n            this.selectedBody = _sbody;\r\n            this.offset.x=  this.selectedBody.shape.x -  event.x;\r\n            this.offset.y = this.selectedBody.shape.y - event.y;\r\n        }\r\n        \r\n    }\r\n    onmousemove(event:MouseEvent){\r\n        \r\n        if (this.selectedBody)\r\n        {\r\n            this.selectedBody.shape.x = event.x + this.offset.x;\r\n            this.selectedBody.shape.y = event.y + this.offset.y;\r\n        }\r\n    }\r\n\r\n    onmouseup(event:MouseEvent){\r\n        if (this.selectedBody){\r\n            this.selectedBody.selected = false;\r\n\r\n            this.selectedBody = null;\r\n        }\r\n    }\r\n}","/// <reference path=\"main.d.ts\" />\r\n\r\nenum Controlmode {\r\n    None,AddObject,\r\n}\r\n\r\nclass Tester {\r\n    ctx :Canvas2D= null;\r\n    background = \"../../image/background.png\";\r\n    renderer: SampleRenderer;\r\n    mousePressed :boolean= false;\r\n    status : Controlmode = Controlmode.None;\r\n    relationBody : RBody[] = [];\r\n    init(){\r\n        \r\n        var c  = <HTMLCanvasElement> document.getElementById(\"canvas\");\r\n        Resource.width = c.width;\r\n        Resource.height = c.height;   \r\n        Resource.worldRect = new Rect(0,0,Resource.width,Resource.height); \r\n        this.ctx  = <Canvas2D> c.getContext(\"2d\");\r\n        this.ctx.width = c.width;\r\n        this.ctx.height = c.height;\r\n        Resource.Images.push(this.background);\r\n        Resource.OnFinishedLoad = function(){\r\n            this.initBodies();\r\n        }.bind(this)\r\n        Resource.load();\r\n        this.renderer = new SampleRenderer();\r\n        \r\n        this.renderer.canvas = this.ctx;\r\n        this.renderer.addMouseEvent(c);\r\n\r\n        c.addEventListener(\"mousedown\",this.onmousedown.bind(this));\r\n        c.addEventListener(\"mousemove\",this.onmousemove.bind(this));\r\n        c.addEventListener(\"mouseup\",this.onmouseup.bind(this));    \r\n    }\r\n\r\n    onmousedown(event:MouseEvent){\r\n        this.mousePressed = true;\r\n        if (this.status == Controlmode.AddObject){\r\n        }\r\n    }\r\n\r\n    onmousemove(event:MouseEvent){\r\n        if (this.mousePressed){\r\n            if (this.status == Controlmode.AddObject){\r\n            }\r\n        }\r\n    }\r\n\r\n    onmouseup(evnt:MouseEvent){\r\n        \r\n        this.mousePressed = false;;\r\n        if (this.status == Controlmode.AddObject){\r\n        }\r\n    }\r\n\r\n    setStatus(mode:string){\r\n        this.status = Controlmode[mode];\r\n    }\r\n\r\n    stepframe(){\r\n        this.renderer.refresh();\r\n    }\r\n    start(){\r\n        this.renderer.start();\r\n    }\r\n    stop(){\r\n        this.renderer.stop();\r\n    }\r\n    initBodies(){\r\n        var box1 = new TestBody();\r\n        box1.color = \"#02F\";\r\n        box1.shape = new Rect(40,300,150,80);\r\n        this.relationBody.push(box1);\r\n        this.renderer.addObject(box1);\r\n\r\n        var box2 = new TestBody();\r\n        box2.color = \"#F2F\";\r\n        box2.shape = new Rect(440,100,350,5);\r\n        this.relationBody.push(box2);\r\n        this.renderer.addObject(box2);\r\n\r\n        var box3 = new TestBody();\r\n        box3.color = \"#F21\";\r\n        box3.shape = new Rect(540,400,5,80);\r\n        this.relationBody.push(box3);\r\n        this.renderer.addObject(box3);\r\n\r\n        var wedge1 = new PolygonBody();        \r\n        wedge1.setPoints([500,300,600,300,600,250,400,250,500,300]);\r\n        this.relationBody.push(wedge1);\r\n        this.renderer.addObject(wedge1);\r\n\r\n         var wedge2 = new PolygonBody();        \r\n        wedge2.setPoints([150,100,300,200,300,210,150,110,150,100]);\r\n        this.relationBody.push(wedge2);\r\n        this.renderer.addObject(wedge2);\r\n        \r\n        var ball1 = new CircleActor();\r\n        ball1.color = \"red\";\r\n        ball1.shape.x = 50;\r\n        ball1.shape.y = 50;\r\n        ball1.shape.width = 5;\r\n        ball1.relationBody = this.relationBody;\r\n        ball1.move(1,0);\r\n        this.renderer.addObject(ball1);\r\n\r\n        var ball2 = new CircleActor();\r\n        ball2.color = \"magenta\";\r\n        ball2.shape.x = 50;\r\n        ball2.shape.y = 250;\r\n        ball2.shape.width = 6;\r\n        ball2.relationBody = this.relationBody;\r\n        ball2.move(7,0);\r\n        this.renderer.addObject(ball2);\r\n\r\n        var ball3 = new CircleActor();\r\n        ball3.color = \"#3F1\";\r\n        ball3.shape.x = 450;\r\n        ball3.shape.y = 50;\r\n        ball3.shape.width = 16;\r\n        ball3.relationBody = this.relationBody;\r\n        ball3.move(-3,0);\r\n        this.renderer.addObject(ball3);\r\n\r\n        var ball4 = new CircleActor();\r\n        ball4.color = \"gray\";\r\n        ball4.shape.x = 250;\r\n        ball4.shape.y = 70;\r\n        ball4.shape.width = 3;\r\n        ball4.relationBody = this.relationBody;\r\n        ball4.move(4,0);\r\n        this.renderer.addObject(ball4);\r\n\r\n        var circleBody1 = new CircleBody();\r\n        circleBody1.shape.x = 300;\r\n        circleBody1.shape.y = 400;\r\n        circleBody1.shape.width = 50;\r\n        circleBody1.color= \"yellow\";\r\n        this.relationBody.push(circleBody1);\r\n        this.renderer.addObject(circleBody1)        \r\n\r\n        document.addEventListener(\"keydown\",this.OnKeyDown);\r\n\r\n        this.start();\r\n    }\r\n\r\n    OnKeyDown(evt:KeyboardEvent) : any{\r\n    }\r\n}\r\nclass CircleActor extends CircleBody {\r\n    relationBody :RBody[]=[];\r\n    velocityX = 0;\r\n    velocityY = 0;    \r\n    update(){        \r\n        this.velocityY += 9.8/60;\r\n\r\n        var lines : Line[] =[];\r\n        for (var i = 0 ; i < this.relationBody.length ; i++)\r\n            getLineBody(this.relationBody[i],lines);\r\n        \r\n        var circlebodies : CircleBody[] = [];\r\n        for (var i = 0 ; i < this.relationBody.length ; i++){\r\n            if (this.relationBody[i] instanceof CircleBody)\r\n            circlebodies.push(this.relationBody[i]);\r\n        }\r\n\r\n        var vector = this.getVector();\r\n        var angle = vector.angle;\r\n        var lastLine = null;\r\n        var newangle = 0;\r\n        var endPoint = MathUtil.getEndPoint(vector.position,vector.angle,vector.distance)\r\n        var collision = CollisionTester.checkintersection(lines,vector.position,endPoint, lastLine,function(point:Point, line:LineBody){\r\n            var p = MathUtil.subjectPoint(line.startPos,line.endPos);\r\n            var lineangle = Math.abs(MathUtil.toDegrees(Math.atan2(p.y,p.x)));\r\n            lastLine = line;\r\n            newangle = angle + (lineangle - angle)*2\r\n        });\r\n\r\n        CollisionTester.validCircleToLine(circlebodies,vector.position,endPoint,function(newpoint,angle,subdistance){\r\n            collision = newpoint;\r\n            newangle = angle;\r\n        })\r\n\r\n        if (collision)\r\n        {\r\n            angle = newangle;\r\n            var velocity =  MathUtil.getEndPoint(new Point(),angle,vector.distance);\r\n            this.velocityX = velocity.x;\r\n            this.velocityY = velocity.y;\r\n        }\r\n    }\r\n\r\n    getVector() : Vector{\r\n        var vector = new Vector(this.shape,this.shape.y);\r\n        vector.angle = MathUtil.toDegrees(Math.atan2(-this.velocityY,this.velocityX));\r\n        vector.distance =  MathUtil.getDistance(new Point(),new Point(this.velocityX,this.velocityY));\r\n        this.angle = vector.angle;\r\n        return vector;\r\n    }\r\n\r\n    move (x:number,y:number){\r\n        this.velocityX = x;\r\n        this.velocityY = y;\r\n        var animate = new MoveAnimate();\r\n        animate.data = this;\r\n        animate.callback = function(data:CircleActor){\r\n            \r\n            var left =  data.shape.x - data.shape.width;\r\n            var right = data.shape.x + data.shape.width;\r\n            var top = data.shape.y - data.shape.width;\r\n            var buttom = data.shape.y + data.shape.width;\r\n            var rect = new Rect(left,top,data.shape.width*2,data.shape.width*2);\r\n            var collistion = false;\r\n            Resource.worldRect.collisionTest(rect,function(direction){\r\n                collistion = true;\r\n                switch(direction){\r\n                    case \"left\":\r\n                        data.velocityX = -data.velocityX;\r\n                        break;\r\n                    case \"right\":\r\n                        data.velocityX = -data.velocityX;\r\n                        break;\r\n                    case \"top\":\r\n                        data.velocityY = -data.velocityY;\r\n                        break;\r\n                    case \"bottom\":\r\n                        data.velocityY = -data.velocityY;\r\n                        break;                    \r\n                    default:\r\n                        data.update();\r\n                        break;\r\n                }\r\n            });\r\n            if (!collistion)\r\n                data.update();\r\n            data.shape.x += data.velocityX;\r\n            data.shape.y += data.velocityY;\r\n        };\r\n        animate.start();\r\n    }\r\n}\r\n\r\n\r\nvar tester  = new Tester();\r\n\r\n    "]}